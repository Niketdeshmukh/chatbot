{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niket\\\\New folder\\\\chatbot\\\\frontend\\\\src\\\\Components\\\\Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport chatbotImg from \"../images/chatbot.png\";\nimport userimage from \"../images/dp.png\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { useDropzone } from \"react-dropzone\";\nimport happy from \"../images/happy.png\";\nimport sad from \"../images/sad.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chatbot() {\n  _s();\n\n  const [chatbot, setChatbot] = useState(false);\n  const [botMessages, setBotMessages] = useState([]);\n  const [location, setLocation] = useState();\n  const [personMessages, setPersonMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [data, setData] = useState([]);\n  const [showFileModal, setFileModal] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState();\n  const [response, setResponse] = useState([]);\n\n  const feedback = (response, index) => {\n    setResponse(oldArray => [...oldArray, {\n      response,\n      index\n    }]);\n  };\n\n  var messages = [];\n\n  Array.prototype.unique = function () {\n    var a = this.concat();\n\n    for (var i = 0; i < a.length; ++i) {\n      for (var j = i + 1; j < a.length; ++j) {\n        if (a[i] === a[j]) a.splice(j--, 1);\n      }\n    }\n\n    return a;\n  };\n\n  messages = botMessages.concat(personMessages).unique();\n  console.log(messages);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      setFiles(oldArray => [...oldArray, file]);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  const setShowFileModal = param => {\n    setFileModal(param);\n    setFiles([]);\n    setUploadProgress();\n  };\n\n  const removeFile = filePath => {\n    setFiles(files.filter(item => item.path !== filePath));\n  };\n\n  const FileUploader = async (file, index, size) => {\n    var response;\n    console.log(index, size);\n\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      response = await axios.post(`http://localhost:8000/api/v1/upload/singleFile`, formData, {\n        onUploadProgress: ProgressEvent => {\n          setUploadProgress(Math.round(ProgressEvent.loaded / ProgressEvent.total * 100 * (index / size)));\n        }\n      });\n    }\n\n    return response;\n  };\n\n  const uploadFiles = async () => {\n    for (var i = 0; i < files.length; i++) {\n      const response = await FileUploader(files[i], i + 1, files.length);\n\n      if (response.data) {\n        setData(oldArray => [...oldArray, response.data]);\n      }\n    }\n  };\n\n  const toggleChatbot = () => {\n    setChatbot(!chatbot);\n  };\n\n  const chatBody = document.getElementById(\"chatBody\");\n\n  const scrollToBottom = () => {\n    chatBody.scrollTop = chatBody.scrollHeight;\n  };\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = document.getElementById(\"message\").value;\n\n    if (message && message.trim().length > 0) {\n      setPersonMessages([...messages, {\n        author: \"person\",\n        message: message,\n        time: Date.now()\n      }]);\n      scrollToBottom();\n      document.getElementById(\"message\").value = \"\";\n      const result = await axios.get(\"https://api.github.com/users/hacktivist123/repos\");\n      const botMsg = result.data.filter(userdata => userdata.id == message || userdata.node_id == message);\n      setBotMessages([...messages, {\n        author: \"bot\",\n        message: botMsg.length ? botMsg[0].full_name : \"No match found\",\n        time: Date.now()\n      }]);\n      setLocation(botMsg.length ? botMsg[0].name : \"\");\n    }\n\n    scrollToBottom();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"chat-button\",\n      onClick: toggleChatbot,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg\",\n        children: [chatbot ? \"Close\" : \"Open\", \" Chatbot\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      style: chatbot ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-modal\",\n        id: \"file-modal-body\",\n        hidden: showFileModal ? \"\" : \"hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-modal-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-box-header\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-close\",\n              onClick: () => {\n                setShowFileModal(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"24px\",\n                viewBox: \"0 0 24 24\",\n                width: \"24px\",\n                fill: \"#000000\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M0 0h24v24H0V0z\",\n                  fill: \"none\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: uploadProgress === 100 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"The \", files.length > 1 ? \"files\" : \"file\", \" has been uploaded\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-here\",\n                ...getRootProps(),\n                children: !files.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Drag the file here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"or-center\",\n                    children: \"OR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-input\",\n                    children: [\"click to select file\", /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n                      type: \"file\",\n                      accept: \".pdf\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"or-center\",\n                    children: [files.length, \" file selected\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"fileList\",\n                    children: files.map(file => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [file.path, \" - \", file.size / 1000, \"kb\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          onClick: () => removeFile(file.path),\n                          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            height: \"24px\",\n                            viewBox: \"0 0 24 24\",\n                            width: \"24px\",\n                            fill: \"#777\",\n                            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M0 0h24v24H0V0z\",\n                              fill: \"none\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 195,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 196,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 188,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 33\n                        }, this)]\n                      }, file.path, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploadProgress\",\n                hidden: uploadProgress === \"\" || !uploadProgress ? \"hidden\" : \"\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploadStatus\",\n                  style: {\n                    width: uploadProgress + \"%\"\n                  },\n                  children: [uploadProgress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: files.length ? false : true,\n                className: \"upload-button\",\n                onClick: e => {\n                  uploadFiles(e);\n                },\n                children: \"Upload file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: \"Book Chatbot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-body\",\n            id: \"chatBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: chatbotImg,\n                height: \"35px\",\n                width: \"35px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info\",\n                  children: [\"Bot \", format(new Date(Date.now()), \"kk:mm aaaaa'm'\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  children: \"Hello there, how can I help you?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), messages.sort((a, b) => a.time > b.time ? 1 : -1).map((message, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: message.author === \"person\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  float: \"right\",\n                  marginRight: \"10px\",\n                  display: \"block\",\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-message\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"msg-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        width: \"max-content\",\n                        float: \"right\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"info\",\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [\"User\", \" \", format(new Date(message.time), \"kk:mm aaaaa'm'\")]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"message\",\n                          children: message.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        style: {\n                          marginLeft: \"10px\"\n                        },\n                        src: userimage,\n                        height: \"35px\",\n                        width: \"35px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-body\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: chatbotImg,\n                    height: \"35px\",\n                    width: \"35px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"info\",\n                      children: [\"Bot\", \" \", format(new Date(message.time), \"kk:mm aaaaa'm'\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message\",\n                      children: message.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this), response.some(e => e.index === index) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feedback\",\n                  children: \"Your feedback has been recorded.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"feedback\",\n                  children: [\"Are you happy with the response?\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"feedback-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fc\",\n                      onClick: () => feedback(1, index),\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: happy,\n                        class: \"emoji\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fc\",\n                      onClick: () => feedback(0, index),\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: sad,\n                        class: \"emoji\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"right\",\n                width: \"100%\",\n                marginTop: \"100px\"\n              },\n              id: \"bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSend,\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fileLabel\",\n                type: \"button\",\n                onClick: () => setShowFileModal(true),\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  enableBackground: \"new 0 0 24 24\",\n                  height: \"24px\",\n                  viewBox: \"0 0 24 24\",\n                  width: \"24px\",\n                  fill: \"#1967d2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"g\", {\n                    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                      fill: \"none\",\n                      height: \"24\",\n                      width: \"24\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: /*#__PURE__*/_jsxDEV(\"g\", {\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M14,2H6C4.9,2,4.01,2.9,4.01,4L4,20c0,1.1,0.89,2,1.99,2H18c1.1,0,2-0.9,2-2V8L14,2z M18,20H6V4h7v5h5V20z M8,15.01 l1.41,1.41L11,14.84V19h2v-4.16l1.59,1.59L16,15.01L12.01,11L8,15.01z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"off\",\n                id: \"message\",\n                type: \"text\",\n                className: \"input-message\",\n                placeholder: \"Ask something here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            style: {\n              fontSize: \"14px\"\n            },\n            children: \"You can ask any question related to the book to the chatbot and it will give you the suitable answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Answer found in the paragraph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chatbot, \"hR0IOuH6PFwkqgXTyXBg1U5o3XA=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Chatbot;\nexport default Chatbot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"sources":["C:/Users/niket/New folder/chatbot/frontend/src/Components/Chatbot.js"],"names":["React","useState","useCallback","chatbotImg","userimage","axios","format","useDropzone","happy","sad","Chatbot","chatbot","setChatbot","botMessages","setBotMessages","location","setLocation","personMessages","setPersonMessages","files","setFiles","data","setData","showFileModal","setFileModal","uploadProgress","setUploadProgress","response","setResponse","feedback","index","oldArray","messages","Array","prototype","unique","a","concat","i","length","j","splice","console","log","onDrop","acceptedFiles","forEach","file","getRootProps","getInputProps","isDragActive","setShowFileModal","param","removeFile","filePath","filter","item","path","FileUploader","size","formData","FormData","append","name","post","onUploadProgress","ProgressEvent","Math","round","loaded","total","uploadFiles","toggleChatbot","chatBody","document","getElementById","scrollToBottom","scrollTop","scrollHeight","handleSend","e","preventDefault","message","value","trim","author","time","Date","now","result","get","botMsg","userdata","id","node_id","full_name","display","map","width","sort","b","float","marginRight","textAlign","marginLeft","some","marginTop","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,aAAD,EAAgBC,YAAhB,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,EAApD;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAM4B,QAAQ,GAAG,CAACF,QAAD,EAAWG,KAAX,KAAqB;AACpCF,IAAAA,WAAW,CAAEG,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc;AAAEJ,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAAd,CAAf,CAAX;AACD,GAFD;;AAGA,MAAIE,QAAQ,GAAG,EAAf;;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB,YAAY;AACnC,QAAIC,CAAC,GAAG,KAAKC,MAAL,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;AACjC,WAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGJ,CAAC,CAACG,MAA1B,EAAkC,EAAEC,CAApC,EAAuC;AACrC,YAAIJ,CAAC,CAACE,CAAD,CAAD,KAASF,CAAC,CAACI,CAAD,CAAd,EAAmBJ,CAAC,CAACK,MAAF,CAASD,CAAC,EAAV,EAAc,CAAd;AACpB;AACF;;AAED,WAAOJ,CAAP;AACD,GATD;;AAUAJ,EAAAA,QAAQ,GAAGnB,WAAW,CAACwB,MAAZ,CAAmBpB,cAAnB,EAAmCkB,MAAnC,EAAX;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,QAAMY,MAAM,GAAG1C,WAAW,CAAE2C,aAAD,IAAmB;AAC5CA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAU;AAC9B3B,MAAAA,QAAQ,CAAEW,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcgB,IAAd,CAAf,CAAR;AACD,KAFD;AAGD,GAJyB,EAIvB,EAJuB,CAA1B;AAKA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgD3C,WAAW,CAAC;AAAEqC,IAAAA;AAAF,GAAD,CAAjE;;AACA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClC5B,IAAAA,YAAY,CAAC4B,KAAD,CAAZ;AACAhC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAM,IAAAA,iBAAiB;AAClB,GAJD;;AAKA,QAAM2B,UAAU,GAAIC,QAAD,IAAc;AAC/BlC,IAAAA,QAAQ,CAACD,KAAK,CAACoC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcH,QAArC,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMI,YAAY,GAAG,OAAOX,IAAP,EAAajB,KAAb,EAAoB6B,IAApB,KAA6B;AAChD,QAAIhC,QAAJ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAAmB6B,IAAnB;;AACA,QAAIZ,IAAJ,EAAU;AACR,YAAMa,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,IAAxB,EAA8BA,IAAI,CAACgB,IAAnC;AACApC,MAAAA,QAAQ,GAAG,MAAMtB,KAAK,CAAC2D,IAAN,CACd,gDADc,EAEfJ,QAFe,EAGf;AACEK,QAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACnCxC,UAAAA,iBAAiB,CACfyC,IAAI,CAACC,KAAL,CACGF,aAAa,CAACG,MAAd,GAAuBH,aAAa,CAACI,KAAtC,GACE,GADF,IAEGxC,KAAK,GAAG6B,IAFX,CADF,CADe,CAAjB;AAOD;AATH,OAHe,CAAjB;AAeD;;AACD,WAAOhC,QAAP;AACD,GAvBD;;AAyBA,QAAM4C,WAAW,GAAG,YAAY;AAC9B,SAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACoB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAMX,QAAQ,GAAG,MAAM+B,YAAY,CAACvC,KAAK,CAACmB,CAAD,CAAN,EAAWA,CAAC,GAAG,CAAf,EAAkBnB,KAAK,CAACoB,MAAxB,CAAnC;;AACA,UAAIZ,QAAQ,CAACN,IAAb,EAAmB;AACjBC,QAAAA,OAAO,CAAES,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcJ,QAAQ,CAACN,IAAvB,CAAf,CAAP;AACD;AACF;AACF,GAPD;;AASA,QAAMmD,aAAa,GAAG,MAAM;AAC1B5D,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,QAAM8D,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAACI,SAAT,GAAqBJ,QAAQ,CAACK,YAA9B;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGR,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCQ,KAAnD;;AACA,QAAID,OAAO,IAAIA,OAAO,CAACE,IAAR,GAAe7C,MAAf,GAAwB,CAAvC,EAA0C;AACxCrB,MAAAA,iBAAiB,CAAC,CAChB,GAAGc,QADa,EAEhB;AAAEqD,QAAAA,MAAM,EAAE,QAAV;AAAoBH,QAAAA,OAAO,EAAEA,OAA7B;AAAsCI,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAA5C,OAFgB,CAAD,CAAjB;AAIAZ,MAAAA,cAAc;AACdF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCQ,KAAnC,GAA2C,EAA3C;AAEA,YAAMM,MAAM,GAAG,MAAMpF,KAAK,CAACqF,GAAN,CACnB,kDADmB,CAArB;AAGA,YAAMC,MAAM,GAAGF,MAAM,CAACpE,IAAP,CAAYkC,MAAZ,CACZqC,QAAD,IAAcA,QAAQ,CAACC,EAAT,IAAeX,OAAf,IAA0BU,QAAQ,CAACE,OAAT,IAAoBZ,OAD/C,CAAf;AAGApE,MAAAA,cAAc,CAAC,CACb,GAAGkB,QADU,EAEb;AACEqD,QAAAA,MAAM,EAAE,KADV;AAEEH,QAAAA,OAAO,EAAES,MAAM,CAACpD,MAAP,GAAgBoD,MAAM,CAAC,CAAD,CAAN,CAAUI,SAA1B,GAAsC,gBAFjD;AAGET,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAHR,OAFa,CAAD,CAAd;AAQAxE,MAAAA,WAAW,CAAC2E,MAAM,CAACpD,MAAP,GAAgBoD,MAAM,CAAC,CAAD,CAAN,CAAU5B,IAA1B,GAAiC,EAAlC,CAAX;AACD;;AACDa,IAAAA,cAAc;AACf,GA5BD;;AA6BA,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAA2B,MAAA,OAAO,EAAEJ,aAApC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBAAsB7D,OAAO,GAAG,OAAH,GAAa,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,KAAK,EAAEA,OAAO,GAAG;AAAEqF,QAAAA,OAAO,EAAE;AAAX,OAAH,GAA0B;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAF1C;AAAA,8BAIE;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,EAAE,EAAC,iBAFL;AAGE,QAAA,MAAM,EAAEzE,aAAa,GAAG,EAAH,GAAQ,QAH/B;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mDAEE;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACb4B,gBAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,eAJH;AAAA,qCAME;AACE,gBAAA,KAAK,EAAC,4BADR;AAEE,gBAAA,MAAM,EAAC,MAFT;AAGE,gBAAA,OAAO,EAAC,WAHV;AAIE,gBAAA,KAAK,EAAC,MAJR;AAKE,gBAAA,IAAI,EAAC,SALP;AAAA,wCAOE;AAAM,kBAAA,CAAC,EAAC,iBAAR;AAA0B,kBAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAM,kBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACG1B,cAAc,KAAK,GAAnB,gBACC;AAAA,iCACON,KAAK,CAACoB,MAAN,GAAe,CAAf,GAAmB,OAAnB,GAA6B,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAKC;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,mBAAiCS,YAAY,EAA7C;AAAA,0BACG,CAAC7B,KAAK,CAACoB,MAAP,gBACC;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,oEAEE,sBACMU,aAAa,EADnB;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA,gCADD,gBAcC;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA,+BACG9B,KAAK,CAACoB,MADT;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAI,oBAAA,SAAS,EAAC,UAAd;AAAA,8BACGpB,KAAK,CAAC8E,GAAN,CAAWlD,IAAD,IAAU;AACnB,0CACE;AAAA,mCACGA,IAAI,CAACU,IADR,SACiBV,IAAI,CAACY,IAAL,GAAY,IAD7B,qBAEE;AAAM,0BAAA,OAAO,EAAE,MAAMN,UAAU,CAACN,IAAI,CAACU,IAAN,CAA/B;AAAA,iDACE;AACE,4BAAA,KAAK,EAAC,4BADR;AAEE,4BAAA,MAAM,EAAC,MAFT;AAGE,4BAAA,OAAO,EAAC,WAHV;AAIE,4BAAA,KAAK,EAAC,MAJR;AAKE,4BAAA,IAAI,EAAC,MALP;AAAA,oDAOE;AAAM,8BAAA,CAAC,EAAC,iBAAR;AAA0B,8BAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oCAPF,eAQE;AAAM,8BAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,oCARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA,yBAASV,IAAI,CAACU,IAAd;AAAA;AAAA;AAAA;AAAA,8BADF;AAiBD,qBAlBA;AADH;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,sBADF,eA4CE;AACE,gBAAA,SAAS,EAAC,gBADZ;AAEE,gBAAA,MAAM,EACJhC,cAAc,KAAK,EAAnB,IAAyB,CAACA,cAA1B,GAA2C,QAA3C,GAAsD,EAH1D;AAAA,uCAME;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,KAAK,EAAE;AAAEyE,oBAAAA,KAAK,EAAEzE,cAAc,GAAG;AAA1B,mBAFT;AAAA,6BAIGA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,sBA5CF,eAyDE;AACE,gBAAA,QAAQ,EAAEN,KAAK,CAACoB,MAAN,GAAe,KAAf,GAAuB,IADnC;AAEE,gBAAA,SAAS,EAAC,eAFZ;AAGE,gBAAA,OAAO,EAAGyC,CAAD,IAAO;AACdT,kBAAAA,WAAW,CAACS,CAAD,CAAX;AACD,iBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzDF;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAJF,eA2GE;AAAA;AAAA;AAAA;AAAA,cA3GF,eA4GE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,EAAE,EAAC,UAA9B;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAE7E,UAAV;AAAsB,gBAAA,MAAM,EAAC,MAA7B;AAAoC,gBAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,qCACOG,MAAM,CAAC,IAAIiF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,EAAuB,gBAAvB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAaGxD,QAAQ,CACNmE,IADF,CACO,CAAC/D,CAAD,EAAIgE,CAAJ,KAAWhE,CAAC,CAACkD,IAAF,GAASc,CAAC,CAACd,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CADzC,EAEEW,GAFF,CAEM,CAACf,OAAD,EAAUpD,KAAV,kBACH;AAAA,wBACGoD,OAAO,CAACG,MAAR,KAAmB,QAAnB,gBACC;AACE,gBAAA,KAAK,EAAE;AACLgB,kBAAAA,KAAK,EAAE,OADF;AAELC,kBAAAA,WAAW,EAAE,MAFR;AAGLN,kBAAAA,OAAO,EAAE,OAHJ;AAILE,kBAAAA,KAAK,EAAE;AAJF,iBADT;AAAA,uCAQE;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,eAAf;AAAA,2CACE;AACE,sBAAA,KAAK,EAAE;AACLF,wBAAAA,OAAO,EAAE,MADJ;AAELE,wBAAAA,KAAK,EAAE,aAFF;AAGLG,wBAAAA,KAAK,EAAE;AAHF,uBADT;AAAA,8CAOE;AAAK,wBAAA,SAAS,EAAC,MAAf;AAAA,gDACE;AACE,0BAAA,SAAS,EAAC,MADZ;AAEE,0BAAA,KAAK,EAAE;AAAEE,4BAAAA,SAAS,EAAE;AAAb,2BAFT;AAAA,6CAIO,GAJP,EAKGjG,MAAM,CACL,IAAIiF,IAAJ,CAASL,OAAO,CAACI,IAAjB,CADK,EAEL,gBAFK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAWE;AAAK,0BAAA,SAAS,EAAC,SAAf;AAAA,oCAA0BJ,OAAO,CAACA;AAAlC;AAAA;AAAA;AAAA;AAAA,gCAXF;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPF,eAoBE;AACE,wBAAA,KAAK,EAAE;AAAEsB,0BAAAA,UAAU,EAAE;AAAd,yBADT;AAEE,wBAAA,GAAG,EAAEpG,SAFP;AAGE,wBAAA,MAAM,EAAC,MAHT;AAIE,wBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,8BApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBAAmC0B,KAAnC;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,sBADD,gBA0CC;AAAK,gBAAA,KAAK,EAAE;AAAEoE,kBAAAA,KAAK,EAAE;AAAT,iBAAZ;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,cAAf;AAA8B,kBAAA,KAAK,EAAE;AAAEA,oBAAAA,KAAK,EAAE;AAAT,mBAArC;AAAA,0CACE;AAAK,oBAAA,GAAG,EAAE/F,UAAV;AAAsB,oBAAA,MAAM,EAAC,MAA7B;AAAoC,oBAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAK,sBAAA,SAAS,EAAC,MAAf;AAAA,wCACM,GADN,EAEGG,MAAM,CAAC,IAAIiF,IAAJ,CAASL,OAAO,CAACI,IAAjB,CAAD,EAAyB,gBAAzB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAKE;AAAK,sBAAA,SAAS,EAAC,SAAf;AAAA,gCAA0BJ,OAAO,CAACA;AAAlC;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAWGvD,QAAQ,CAAC8E,IAAT,CAAezB,CAAD,IAAOA,CAAC,CAAClD,KAAF,KAAYA,KAAjC,iBACC;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,gBAKC;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,8EAEE;AAAK,oBAAA,SAAS,EAAC,eAAf;AAAA,4CACE;AACE,sBAAA,SAAS,EAAC,IADZ;AAEE,sBAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC,CAAD,EAAIC,KAAJ,CAFzB;AAAA,8CAIE;AAAK,wBAAA,GAAG,EAAEtB,KAAV;AAAiB,wBAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,8BAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAQE;AACE,sBAAA,SAAS,EAAC,IADZ;AAEE,sBAAA,OAAO,EAAE,MAAMqB,QAAQ,CAAC,CAAD,EAAIC,KAAJ,CAFzB;AAAA,8CAIE;AAAK,wBAAA,GAAG,EAAErB,GAAV;AAAe,wBAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,8BAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CJ,eAAWqB,KAAX;AAAA;AAAA;AAAA;AAAA,oBAHH,CAbH,eAmGE;AACE,cAAA,KAAK,EAAE;AAAEuE,gBAAAA,KAAK,EAAE,OAAT;AAAkBH,gBAAAA,KAAK,EAAE,MAAzB;AAAiCQ,gBAAAA,SAAS,EAAE;AAA5C,eADT;AAEE,cAAA,EAAE,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,oBAnGF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eA2GE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAM,cAAA,QAAQ,EAAE3B,UAAhB;AAA4B,cAAA,MAAM,EAAC,MAAnC;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,WADZ;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,OAAO,EAAE,MAAM5B,gBAAgB,CAAC,IAAD,CAHjC;AAAA,uCAKE;AACE,kBAAA,KAAK,EAAC,4BADR;AAEE,kBAAA,gBAAgB,EAAC,eAFnB;AAGE,kBAAA,MAAM,EAAC,MAHT;AAIE,kBAAA,OAAO,EAAC,WAJV;AAKE,kBAAA,KAAK,EAAC,MALR;AAME,kBAAA,IAAI,EAAC,SANP;AAAA,0CAQE;AAAA,2CACE;AAAM,sBAAA,IAAI,EAAC,MAAX;AAAkB,sBAAA,MAAM,EAAC,IAAzB;AAA8B,sBAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BARF,eAWE;AAAA,2CACE;AAAA,6CACE;AAAM,wBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,sBADF,eAwBE;AACE,gBAAA,YAAY,EAAC,KADf;AAEE,gBAAA,EAAE,EAAC,SAFL;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,SAAS,EAAC,eAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBAxBF,eA+BE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3GF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgJE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAE;AAAEwD,cAAAA,QAAQ,EAAE;AAAZ,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAK5F;AAAL;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5GF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AA6QD;;GA5XQL,O;UA+B+CH,W;;;KA/B/CG,O;AA6XT,eAAeA,OAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport chatbotImg from \"../images/chatbot.png\";\nimport userimage from \"../images/dp.png\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { useDropzone } from \"react-dropzone\";\nimport happy from \"../images/happy.png\";\nimport sad from \"../images/sad.png\";\n\nfunction Chatbot() {\n  const [chatbot, setChatbot] = useState(false);\n  const [botMessages, setBotMessages] = useState([]);\n  const [location, setLocation] = useState();\n  const [personMessages, setPersonMessages] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [data, setData] = useState([]);\n  const [showFileModal, setFileModal] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState();\n  const [response, setResponse] = useState([]);\n  const feedback = (response, index) => {\n    setResponse((oldArray) => [...oldArray, { response, index }]);\n  };\n  var messages = [];\n  Array.prototype.unique = function () {\n    var a = this.concat();\n    for (var i = 0; i < a.length; ++i) {\n      for (var j = i + 1; j < a.length; ++j) {\n        if (a[i] === a[j]) a.splice(j--, 1);\n      }\n    }\n\n    return a;\n  };\n  messages = botMessages.concat(personMessages).unique();\n  console.log(messages);\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      setFiles((oldArray) => [...oldArray, file]);\n    });\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  const setShowFileModal = (param) => {\n    setFileModal(param);\n    setFiles([]);\n    setUploadProgress();\n  };\n  const removeFile = (filePath) => {\n    setFiles(files.filter((item) => item.path !== filePath));\n  };\n  const FileUploader = async (file, index, size) => {\n    var response;\n    console.log(index, size);\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      response = await axios.post(\n        `http://localhost:8000/api/v1/upload/singleFile`,\n        formData,\n        {\n          onUploadProgress: (ProgressEvent) => {\n            setUploadProgress(\n              Math.round(\n                (ProgressEvent.loaded / ProgressEvent.total) *\n                  100 *\n                  (index / size)\n              )\n            );\n          },\n        }\n      );\n    }\n    return response;\n  };\n\n  const uploadFiles = async () => {\n    for (var i = 0; i < files.length; i++) {\n      const response = await FileUploader(files[i], i + 1, files.length);\n      if (response.data) {\n        setData((oldArray) => [...oldArray, response.data]);\n      }\n    }\n  };\n\n  const toggleChatbot = () => {\n    setChatbot(!chatbot);\n  };\n  const chatBody = document.getElementById(\"chatBody\");\n  const scrollToBottom = () => {\n    chatBody.scrollTop = chatBody.scrollHeight;\n  };\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    const message = document.getElementById(\"message\").value;\n    if (message && message.trim().length > 0) {\n      setPersonMessages([\n        ...messages,\n        { author: \"person\", message: message, time: Date.now() },\n      ]);\n      scrollToBottom();\n      document.getElementById(\"message\").value = \"\";\n\n      const result = await axios.get(\n        \"https://api.github.com/users/hacktivist123/repos\"\n      );\n      const botMsg = result.data.filter(\n        (userdata) => userdata.id == message || userdata.node_id == message\n      );\n      setBotMessages([\n        ...messages,\n        {\n          author: \"bot\",\n          message: botMsg.length ? botMsg[0].full_name : \"No match found\",\n          time: Date.now(),\n        },\n      ]);\n      setLocation(botMsg.length ? botMsg[0].name : \"\");\n    }\n    scrollToBottom();\n  };\n  return (\n    <>\n      <a className=\"chat-button\" onClick={toggleChatbot}>\n        <div className=\"msg\">{chatbot ? \"Close\" : \"Open\"} Chatbot</div>\n      </a>\n      <div\n        className=\"chatbot\"\n        style={chatbot ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <div\n          className=\"file-upload-modal\"\n          id=\"file-modal-body\"\n          hidden={showFileModal ? \"\" : \"hidden\"}\n        >\n          <div className=\"file-modal-box\">\n            <div className=\"modal-box-header\">\n              Upload File\n              <div\n                className=\"modal-close\"\n                onClick={() => {\n                  setShowFileModal(false);\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  width=\"24px\"\n                  fill=\"#000000\"\n                >\n                  <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"modal-body\">\n              {uploadProgress === 100 ? (\n                <h3>\n                  The {files.length > 1 ? \"files\" : \"file\"} has been uploaded\n                </h3>\n              ) : (\n                <>\n                  <div className=\"upload-here\" {...getRootProps()}>\n                    {!files.length ? (\n                      <>\n                        <h1>Drag the file here</h1>\n                        <div className=\"or-center\">OR</div>\n                        <div className=\"file-input\">\n                          click to select file\n                          <input\n                            {...getInputProps()}\n                            type=\"file\"\n                            accept=\".pdf\"\n                          />\n                        </div>\n                      </>\n                    ) : (\n                      <>\n                        <div className=\"or-center\">\n                          {files.length} file selected\n                        </div>\n                        <ul className=\"fileList\">\n                          {files.map((file) => {\n                            return (\n                              <li key={file.path}>\n                                {file.path} - {file.size / 1000}kb\n                                <span onClick={() => removeFile(file.path)}>\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    height=\"24px\"\n                                    viewBox=\"0 0 24 24\"\n                                    width=\"24px\"\n                                    fill=\"#777\"\n                                  >\n                                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                                    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\n                                  </svg>\n                                </span>\n                              </li>\n                            );\n                          })}\n                        </ul>\n                      </>\n                    )}\n                  </div>\n                  <div\n                    className=\"uploadProgress\"\n                    hidden={\n                      uploadProgress === \"\" || !uploadProgress ? \"hidden\" : \"\"\n                    }\n                  >\n                    <div\n                      className=\"uploadStatus\"\n                      style={{ width: uploadProgress + \"%\" }}\n                    >\n                      {uploadProgress}%\n                    </div>\n                  </div>\n                  <button\n                    disabled={files.length ? false : true}\n                    className=\"upload-button\"\n                    onClick={(e) => {\n                      uploadFiles(e);\n                    }}\n                  >\n                    Upload file\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        <header></header>\n        <div className=\"flex\">\n          <div className=\"chatbox\">\n            <div className=\"chat-header\">Book Chatbot</div>\n            <div className=\"chat-body\" id=\"chatBody\">\n              <div className=\"message-body\">\n                <img src={chatbotImg} height=\"35px\" width=\"35px\" />\n                <div className=\"text\">\n                  <div className=\"info\">\n                    Bot {format(new Date(Date.now()), \"kk:mm aaaaa'm'\")}\n                  </div>\n                  <div className=\"message\">\n                    Hello there, how can I help you?\n                  </div>\n                </div>\n              </div>\n\n              {messages\n                .sort((a, b) => (a.time > b.time ? 1 : -1))\n                .map((message, index) => (\n                  <span key={index}>\n                    {message.author === \"person\" ? (\n                      <div\n                        style={{\n                          float: \"right\",\n                          marginRight: \"10px\",\n                          display: \"block\",\n                          width: \"100%\",\n                        }}\n                      >\n                        <div className=\"user-message\" key={index}>\n                          <div className=\"msg-container\">\n                            <div\n                              style={{\n                                display: \"flex\",\n                                width: \"max-content\",\n                                float: \"right\",\n                              }}\n                            >\n                              <div className=\"text\">\n                                <div\n                                  className=\"info\"\n                                  style={{ textAlign: \"right\" }}\n                                >\n                                  User{\" \"}\n                                  {format(\n                                    new Date(message.time),\n                                    \"kk:mm aaaaa'm'\"\n                                  )}\n                                </div>\n                                <div className=\"message\">{message.message}</div>\n                              </div>\n                              <img\n                                style={{ marginLeft: \"10px\" }}\n                                src={userimage}\n                                height=\"35px\"\n                                width=\"35px\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ) : (\n                      <div style={{ width: \"100%\" }}>\n                        <div className=\"message-body\" style={{ width: \"100%\" }}>\n                          <img src={chatbotImg} height=\"35px\" width=\"35px\" />\n                          <div className=\"text\">\n                            <div className=\"info\">\n                              Bot{\" \"}\n                              {format(new Date(message.time), \"kk:mm aaaaa'm'\")}\n                            </div>\n                            <div className=\"message\">{message.message}</div>\n                          </div>\n                        </div>\n                        {response.some((e) => e.index === index) ? (\n                          <div className=\"feedback\">\n                            Your feedback has been recorded.\n                          </div>\n                        ) : (\n                          <div className=\"feedback\">\n                            Are you happy with the response?\n                            <div className=\"feedback-body\">\n                              <div\n                                className=\"fc\"\n                                onClick={() => feedback(1, index)}\n                              >\n                                <img src={happy} class=\"emoji\" />\n                                <div>Yes</div>\n                              </div>\n                              <div\n                                className=\"fc\"\n                                onClick={() => feedback(0, index)}\n                              >\n                                <img src={sad} class=\"emoji\" />\n                                <div>No</div>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </span>\n                ))}\n              <div\n                style={{ float: \"right\", width: \"100%\", marginTop: \"100px\" }}\n                id=\"bottom\"\n              ></div>\n            </div>\n\n            <div className=\"chat-footer\">\n              <form onSubmit={handleSend} method=\"post\">\n                <button\n                  className=\"fileLabel\"\n                  type=\"button\"\n                  onClick={() => setShowFileModal(true)}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    enableBackground=\"new 0 0 24 24\"\n                    height=\"24px\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"24px\"\n                    fill=\"#1967d2\"\n                  >\n                    <g>\n                      <rect fill=\"none\" height=\"24\" width=\"24\" />\n                    </g>\n                    <g>\n                      <g>\n                        <path d=\"M14,2H6C4.9,2,4.01,2.9,4.01,4L4,20c0,1.1,0.89,2,1.99,2H18c1.1,0,2-0.9,2-2V8L14,2z M18,20H6V4h7v5h5V20z M8,15.01 l1.41,1.41L11,14.84V19h2v-4.16l1.59,1.59L16,15.01L12.01,11L8,15.01z\" />\n                      </g>\n                    </g>\n                  </svg>\n                </button>\n                <input\n                  autoComplete=\"off\"\n                  id=\"message\"\n                  type=\"text\"\n                  className=\"input-message\"\n                  placeholder=\"Ask something here...\"\n                />\n                <button type=\"submit\">Send</button>\n              </form>\n            </div>\n          </div>\n          <div className=\"result\">\n            <div className=\"info\" style={{ fontSize: \"14px\" }}>\n              You can ask any question related to the book to the chatbot and it\n              will give you the suitable answers\n            </div>\n            <h1>Answer found in the paragraph</h1>\n            <h1>{location}</h1>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}